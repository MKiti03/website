# Generated by Django 3.2.7 on 2021-10-05 11:19

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_title', models.CharField(blank=True, max_length=254, null=True)),
                ('post_description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('post_image', models.ImageField(default='default.png', upload_to='blog-images/%Y/%m/%d/')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_update', models.DateTimeField(blank=True, null=True)),
                ('set_draft', models.BooleanField(default=True)),
                ('set_featured', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blogs Post',
            },
        ),
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_category_title', models.CharField(blank=True, max_length=254, null=True)),
                ('post_category_description', models.TextField(blank=True, max_length=254, null=True)),
                ('post_category_image', models.ImageField(default='default', upload_to='blog-images/%Y/%m/%d/')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_update', models.DateTimeField(blank=True, null=True)),
                ('set_draft', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Post Category',
                'verbose_name_plural': 'Post Categories',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(blank=True, max_length=254, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_update', models.DateTimeField(blank=True, null=True)),
                ('set_draft', models.BooleanField(default=True)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='post.blogpost')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commented_by', models.CharField(blank=True, max_length=254, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('comment', models.TextField(blank=True, max_length=500, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_update', models.DateTimeField(blank=True, null=True)),
                ('set_draft', models.BooleanField(default=True)),
                ('blog_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='post.blogpost')),
            ],
            options={
                'verbose_name': 'Post comment',
                'verbose_name_plural': 'Post Comments',
            },
        ),
        migrations.AddField(
            model_name='blogpost',
            name='post_category',
            field=models.ManyToManyField(blank=True, to='post.PostCategory'),
        ),
    ]
